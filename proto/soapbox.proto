package soapbox;

message Location {
    required double lon = 1;
    required double lat = 2;
}

message Content {

    // Id - not required at creation time; assigned by server
    optional string id = 1;

    // MIME type. e.g. image/jpeg, image/png, video/mp4
    required string type = 2;

    // Content data bytes
    optional bytes data = 3;

    // Or url as content - link sharing or content in cdn.
    optional string url = 4;
}

message User {

	// Not required at creation time.  Assigned by server.
	optional string id = 1;

	// User entered name
	required string name = 2;

	// User generated status
	optional string status = 3;

	// UI display of user
	optional Content avatar = 4;
	optional Content avatar_small = 5;

	// Other social network identities
	message Identity {

		// Network: e.g. facebook.com, twitter.com, instagr.am
		required string network = 1;

		required string account = 2;

		// For OAuth grants
		repeated string authorizations = 3;
	}

	repeated Identity identities = 6;

	// What this user is interested in. String values should not include '#'
	repeated string interests = 7;
}

// Reference handle for user
message UserRef {
	optional string id = 1;
	optional string email = 2;
	optional string at_name = 3; // @david
	optional string phone = 4;
}

message Post {

	// The message id. Optional at creation time.  To be filled in by the server on commit.
	optional string id = 1;

	// Fractional seconds since epoch (unix time)
	required double timestamp = 2;

	// Location as [lon,lat]
	required Location location = 3;

	required soapbox.UserRef author = 4;

	// In reference of another post. Used by comments potentially.
	optional string referencing_post_id = 5;

	// The content of this post.
	// One of the following should exist for a properly formed post.
	// It can be either actual post or comment to another post. Or an original post
	// with content and comment entered by user.
	optional Content body = 6;
	optional string comment = 7;

	// Hashtags, optional. For message targeting / matching - eg. #sfmuni
	// This may be populated after extracting from user comment.
	// Values here should exclude the '#' character.
	repeated string hashtags = 8;
}

message PostStats {
	required string post_id = 1;
	required int32 views = 2;
	required int32 likes = 3;
	required int32 comments = 4;
	required int32 blocks = 5;
	required int32 viewers = 6;
}

message PostFlags {
	required string post_id = 1;

	// Internal flags - e.g. 'spam', 'coppa-compliance', etc.
	// Not exposed to outside
	repeated string flags = 2;
}