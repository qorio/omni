// Code generated by protoc-gen-go.
// source: soapbox.proto
// DO NOT EDIT!

/*
Package soapbox is a generated protocol buffer package.

It is generated from these files:
	soapbox.proto

It has these top-level messages:
	Location
	Content
	User
	UserRef
	Post
	PostStats
	PostFlags
*/
package soapbox

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Location struct {
	Lon              *float64 `protobuf:"fixed64,1,req,name=lon" json:"lon,omitempty" bson:",omitempty"`
	Lat              *float64 `protobuf:"fixed64,2,req,name=lat" json:"lat,omitempty" bson:",omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}

func (m *Location) GetLon() float64 {
	if m != nil && m.Lon != nil {
		return *m.Lon
	}
	return 0
}

func (m *Location) GetLat() float64 {
	if m != nil && m.Lat != nil {
		return *m.Lat
	}
	return 0
}

type Content struct {
	// Id - not required at creation time; assigned by server
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" bson:",omitempty"`
	// MIME type. e.g. image/jpeg, image/png, video/mp4
	Type *string `protobuf:"bytes,2,req,name=type" json:"type,omitempty" bson:",omitempty"`
	// Content data bytes
	Data []byte `protobuf:"bytes,3,opt,name=data" json:"data,omitempty" bson:",omitempty"`
	// Or url as content - link sharing or content in cdn.
	Url              *string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty" bson:",omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Content) Reset()         { *m = Content{} }
func (m *Content) String() string { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()    {}

func (m *Content) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Content) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Content) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Content) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type User struct {
	// Not required at creation time.  Assigned by server.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" bson:",omitempty"`
	// User entered name
	Name *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty" bson:",omitempty"`
	// User generated status
	Status *string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty" bson:",omitempty"`
	// UI display of user
	Avatar      *Content         `protobuf:"bytes,4,opt,name=avatar" json:"avatar,omitempty" bson:",omitempty"`
	AvatarSmall *Content         `protobuf:"bytes,5,opt,name=avatar_small" json:"avatar_small,omitempty" bson:",omitempty"`
	Identities  []*User_Identity `protobuf:"bytes,6,rep,name=identities" json:"identities,omitempty" bson:",omitempty"`
	// What this user is interested in. String values should not include '#'
	Interests        []string `protobuf:"bytes,7,rep,name=interests" json:"interests,omitempty" bson:",omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}

func (m *User) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *User) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *User) GetAvatar() *Content {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *User) GetAvatarSmall() *Content {
	if m != nil {
		return m.AvatarSmall
	}
	return nil
}

func (m *User) GetIdentities() []*User_Identity {
	if m != nil {
		return m.Identities
	}
	return nil
}

func (m *User) GetInterests() []string {
	if m != nil {
		return m.Interests
	}
	return nil
}

// Other social network identities
type User_Identity struct {
	// Network: e.g. facebook.com, twitter.com, instagr.am
	Network *string `protobuf:"bytes,1,req,name=network" json:"network,omitempty" bson:",omitempty"`
	Account *string `protobuf:"bytes,2,req,name=account" json:"account,omitempty" bson:",omitempty"`
	// For OAuth grants
	Authorizations   []string `protobuf:"bytes,3,rep,name=authorizations" json:"authorizations,omitempty" bson:",omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *User_Identity) Reset()         { *m = User_Identity{} }
func (m *User_Identity) String() string { return proto.CompactTextString(m) }
func (*User_Identity) ProtoMessage()    {}

func (m *User_Identity) GetNetwork() string {
	if m != nil && m.Network != nil {
		return *m.Network
	}
	return ""
}

func (m *User_Identity) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *User_Identity) GetAuthorizations() []string {
	if m != nil {
		return m.Authorizations
	}
	return nil
}

// Reference handle for user
type UserRef struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" bson:",omitempty"`
	Email            *string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty" bson:",omitempty"`
	AtName           *string `protobuf:"bytes,3,opt,name=at_name" json:"at_name,omitempty" bson:",omitempty"`
	Phone            *string `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty" bson:",omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserRef) Reset()         { *m = UserRef{} }
func (m *UserRef) String() string { return proto.CompactTextString(m) }
func (*UserRef) ProtoMessage()    {}

func (m *UserRef) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *UserRef) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *UserRef) GetAtName() string {
	if m != nil && m.AtName != nil {
		return *m.AtName
	}
	return ""
}

func (m *UserRef) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

type Post struct {
	// The message id. Optional at creation time.  To be filled in by the server on commit.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" bson:",omitempty"`
	// Fractional seconds since epoch (unix time)
	Timestamp *float64 `protobuf:"fixed64,2,req,name=timestamp" json:"timestamp,omitempty" bson:",omitempty"`
	// Location as [lon,lat]
	Location *Location `protobuf:"bytes,3,req,name=location" json:"location,omitempty" bson:",omitempty"`
	Author   *UserRef  `protobuf:"bytes,4,req,name=author" json:"author,omitempty" bson:",omitempty"`
	// In reference of another post. Used by comments potentially.
	ReferencingPostId *string `protobuf:"bytes,5,opt,name=referencing_post_id" json:"referencing_post_id,omitempty" bson:",omitempty"`
	// The content of this post.
	// One of the following should exist for a properly formed post.
	// It can be either actual post or comment to another post. Or an original post
	// with content and comment entered by user.
	Body    *Content `protobuf:"bytes,6,opt,name=body" json:"body,omitempty" bson:",omitempty"`
	Comment *string  `protobuf:"bytes,7,opt,name=comment" json:"comment,omitempty" bson:",omitempty"`
	// Hashtags, optional. For message targeting / matching - eg. #sfmuni
	// This may be populated after extracting from user comment.
	// Values here should exclude the '#' character.
	Hashtags         []string `protobuf:"bytes,8,rep,name=hashtags" json:"hashtags,omitempty" bson:",omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Post) Reset()         { *m = Post{} }
func (m *Post) String() string { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()    {}

func (m *Post) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Post) GetTimestamp() float64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *Post) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Post) GetAuthor() *UserRef {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Post) GetReferencingPostId() string {
	if m != nil && m.ReferencingPostId != nil {
		return *m.ReferencingPostId
	}
	return ""
}

func (m *Post) GetBody() *Content {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Post) GetComment() string {
	if m != nil && m.Comment != nil {
		return *m.Comment
	}
	return ""
}

func (m *Post) GetHashtags() []string {
	if m != nil {
		return m.Hashtags
	}
	return nil
}

type PostStats struct {
	PostId           *string `protobuf:"bytes,1,req,name=post_id" json:"post_id,omitempty" bson:",omitempty"`
	Views            *int32  `protobuf:"varint,2,req,name=views" json:"views,omitempty" bson:",omitempty"`
	Likes            *int32  `protobuf:"varint,3,req,name=likes" json:"likes,omitempty" bson:",omitempty"`
	Comments         *int32  `protobuf:"varint,4,req,name=comments" json:"comments,omitempty" bson:",omitempty"`
	Blocks           *int32  `protobuf:"varint,5,req,name=blocks" json:"blocks,omitempty" bson:",omitempty"`
	Viewers          *int32  `protobuf:"varint,6,req,name=viewers" json:"viewers,omitempty" bson:",omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PostStats) Reset()         { *m = PostStats{} }
func (m *PostStats) String() string { return proto.CompactTextString(m) }
func (*PostStats) ProtoMessage()    {}

func (m *PostStats) GetPostId() string {
	if m != nil && m.PostId != nil {
		return *m.PostId
	}
	return ""
}

func (m *PostStats) GetViews() int32 {
	if m != nil && m.Views != nil {
		return *m.Views
	}
	return 0
}

func (m *PostStats) GetLikes() int32 {
	if m != nil && m.Likes != nil {
		return *m.Likes
	}
	return 0
}

func (m *PostStats) GetComments() int32 {
	if m != nil && m.Comments != nil {
		return *m.Comments
	}
	return 0
}

func (m *PostStats) GetBlocks() int32 {
	if m != nil && m.Blocks != nil {
		return *m.Blocks
	}
	return 0
}

func (m *PostStats) GetViewers() int32 {
	if m != nil && m.Viewers != nil {
		return *m.Viewers
	}
	return 0
}

type PostFlags struct {
	PostId *string `protobuf:"bytes,1,req,name=post_id" json:"post_id,omitempty" bson:",omitempty"`
	// Internal flags - e.g. 'spam', 'coppa-compliance', etc.
	// Not exposed to outside
	Flags            []string `protobuf:"bytes,2,rep,name=flags" json:"flags,omitempty" bson:",omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PostFlags) Reset()         { *m = PostFlags{} }
func (m *PostFlags) String() string { return proto.CompactTextString(m) }
func (*PostFlags) ProtoMessage()    {}

func (m *PostFlags) GetPostId() string {
	if m != nil && m.PostId != nil {
		return *m.PostId
	}
	return ""
}

func (m *PostFlags) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func init() {
}
